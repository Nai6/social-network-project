{"version":3,"file":"static/js/413.de663022.chunk.js","mappings":"6LACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAgH,+BAAhH,EAAoK,oCAApK,EAA2N,kCAA3N,EAAoR,sCAApR,EAAqU,0BAArU,EAAwX,wC,mBCoBxX,EAjBqB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIH,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKK,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,OAAKG,IAAKV,EAAMW,OAAQC,IAAI,kBAAkB,UAGtEL,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAyBC,UACrCH,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKK,SAAA,CAAC,IAAEN,EAAMa,KAAK,WAKhD,ECRA,EARgB,SAACb,GACb,OACIO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAC1BN,EAAMc,SAGnB,E,UCRA,EAA0C,gD,uCCMtCC,GAAeC,EAAAA,EAAAA,GAAiB,KAoBpC,GAF4BC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACjB,GAGpB,OAAQG,EAAAA,EAAAA,MAAA,QAAMgB,SAAUnB,EAAMoB,aAAad,SAAA,EACvCC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACFC,YAAY,wBACZT,KAAM,UACNU,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,MAEzBR,EAAAA,EAAAA,KAAA,OAAKH,UAAWuB,EAA+BrB,UAC3CC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAGpB,ICeA,EA/BgB,SAACN,GACb,IAAI4B,EAAiB5B,EAAM6B,YAAYC,YAAYC,KAAI,SAAAC,GAAC,OAAIzB,EAAAA,EAAAA,KAAC0B,EAAY,CAACpB,KAAMmB,EAAEnB,KAAMX,GAAI8B,EAAE9B,GAAIS,OAAQqB,EAAErB,QAAaqB,EAAE9B,GAAM,IAC7HgC,EAAiBlC,EAAM6B,YAAYM,YAAYJ,KAAI,SAAAK,GAAC,OAAI7B,EAAAA,EAAAA,KAAC8B,EAAO,CAACvB,QAASsB,EAAEtB,SAAcsB,EAAElC,GAAM,IAMtG,OAAKF,EAAMsC,QAEPnC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,SAC/BsB,KAGLzB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA2BC,SACtC4B,KAEL3B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA6BC,UACzCC,EAAAA,EAAAA,KAACgC,EAAmB,CAACpB,SAjBjB,SAACqB,GACjBxC,EAAMyC,wBAAwBD,EAAO1B,QAEzC,aAC0BP,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAACjC,GAAI,UAqB5C,ECvBA,GAAekC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAM,CACFhB,YAAagB,EAAMhB,YACnBiB,KAAMD,EAAMC,KAAKR,OAEzB,GAG6B,CAACG,wBAAAA,EAAAA,IAC1BM,EAAAA,EAFJ,CAGMC,E","sources":["webpack://my-app/./src/componets/Dialogs/Dialogs.module.css?887c","componets/Dialogs/DialogsItem/DialogsItem.jsx","componets/Dialogs/Message/Message.jsx","webpack://my-app/./src/componets/Dialogs/AddMessageForm/AddMessageForm.module.css?a8dd","componets/Dialogs/AddMessageForm/AddMessageForm.jsx","componets/Dialogs/Dialogs.jsx","componets/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__EQ3ZI\",\"dialogs_item\":\"Dialogs_dialogs_item__sJqvW\",\"dialogs_users\":\"Dialogs_dialogs_users__btJIf\",\"dialogs_item_names\":\"Dialogs_dialogs_item_names__1cy-q\",\"dialogs_messages\":\"Dialogs_dialogs_messages__u8bjm\",\"dialogs_messages_box\":\"Dialogs_dialogs_messages_box__Vhy-Z\",\"messages\":\"Dialogs_messages__W0cJw\",\"dialogs_messages_input\":\"Dialogs_dialogs_messages_input__-QOP-\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst DialogsItems = (props) => {\r\n    let item = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={style.dialogs_item}>\r\n            <div>\r\n                <NavLink to={item}> <img src={props.avatar} alt=\"DialogItemImg\" /> </NavLink>\r\n            </div>\r\n\r\n            <div className={style.dialogs_item_names}>\r\n                <NavLink to={item}> {props.name} </NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItems","import React from 'react'\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.messages}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs_messages_button\":\"AddMessageForm_dialogs_messages_button__V5PiI\"};","import React from \"react\"\r\nimport styles from './AddMessageForm.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControl/FormsControl'\r\n\r\n\r\nlet maxLength200 = maxLengthCreator(200)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field\r\n            placeholder='Enter your message...'\r\n            name={'message'}\r\n            component={Textarea}\r\n            validate={[required, maxLength200]}\r\n        />\r\n        <div className={styles.dialogs_messages_button}>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport DialogsItems from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageFormRedux from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement = props.dialogsPage.dialogsData.map(d => <DialogsItems name={d.name} id={d.id} avatar={d.avatar} key={d.id} />);\r\n    let messageElement = props.dialogsPage.messageData.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.NewMessageActionCreator(values.message)\r\n\r\n    }\r\n    if (!props.isAuth) return <Navigate to={'/login'} />\r\n    return (\r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.dialogs_users}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n            <div className={style.dialogs_messages}>\r\n                <div className={style.dialogs_messages_box}>\r\n                    {messageElement}\r\n                </div>\r\n                <div className={style.dialogs_messages_input}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { NewMessageActionCreator } from '../../redux/dialog_reducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {NewMessageActionCreator}),\r\n    withAuthRedirect\r\n    )(Dialogs);"],"names":["props","item","id","_jsxs","className","style","children","_jsx","NavLink","to","src","avatar","alt","name","message","maxLength200","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","styles","dialogsElement","dialogsPage","dialogsData","map","d","DialogsItems","messageElement","messageData","m","Message","isAuth","AddMessageFormRedux","values","NewMessageActionCreator","Navigate","compose","connect","state","auth","withAuthRedirect","Dialogs"],"sourceRoot":""}